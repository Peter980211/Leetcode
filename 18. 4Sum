//暴力解，注意迭代remove时的问题
class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> ret = new LinkedList<>();
        Arrays.sort(nums);
        if(nums.length < 4){
            return ret;
        }
        for(int a = 0; a < nums.length; a++){
            for(int b = a + 1; b < nums.length; b++){
                for(int c = b + 1; c < nums.length; c++){
                    for(int d = c + 1; d < nums.length; d++){
                        if(nums[a]+nums[b]+nums[c]+nums[d] == target){
                            List<Integer> thisLine = new ArrayList<>();
                            thisLine.add(nums[a]);
                            thisLine.add(nums[b]);
                            thisLine.add(nums[c]);
                            thisLine.add(nums[d]);
                            ret.add(thisLine);
                        }
                    }
                }
            }
        }
        for(int i = 0; i < ret.size() ; i++){
            for(int j = ret.size() - 1; j > i ; j--){//这一行非常关键。对于List中重写的remove方法，删除后所有元素向前移。如果j从小到大递增，会略过一些元素（元素被前移后，j增加）。
                if(ret.get(i).equals(ret.get(j))){
                    ret.remove(j);
                }
            }
        }
        return ret;
    }
}
