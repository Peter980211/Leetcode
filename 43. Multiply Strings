//暴力方法，模拟算式，又乘又加
class Solution {
    public String multiply(String num1, String num2) {
        if(num1.equals("0") || num2.equals("0")){
            return "0";
        }
        //StringBuilder sb = new StringBuilder();
        List<String> products = new ArrayList<>();
        for(int i = num2.length() - 1; i >= 0; i--){
            StringBuilder tmp = new StringBuilder();
            int carry = 0;
            int b = num2.charAt(i) - '0';  
            for(int j = num1.length() - 1; j >= 0; j--){
                int a = num1.charAt(j) - '0';
                char digit = (char)((a * b + carry) % 10 + '0');
                carry = (a * b + carry) / 10;
                tmp.append(digit);
            }
            if(carry != 0){
                tmp.append((char)(carry + '0'));
            }
            tmp.reverse();
            for(int k = 0; k < num2.length() - 1 - i; k++){
                tmp.append("0");
            }
            products.add(tmp.toString());
        }
        //System.out.println(products.toString());
        String s = "0";
        for(int i = 0; i < products.size(); i++){
            s = addString(s, products.get(i));
        }
        return s;
    }
    private String addString(String s1, String s2){
        StringBuilder ret = new StringBuilder();
        StringBuilder sb1;
        StringBuilder sb2;
        if(s1.length() < s2.length()){
            sb1 = new StringBuilder(s1);
            sb2 = new StringBuilder(s2);
        }else{
            sb1 = new StringBuilder(s2);
            sb2 = new StringBuilder(s1);
        }
        sb1.reverse();
        sb2.reverse();
        //System.out.println(sb1.length());
        //System.out.println(sb2.length());
        int gap = sb2.length() - sb1.length();
        for(int i = 0; i < gap; i++){
            sb1.append("0");
        }
        //System.out.println(sb1.toString());
        //System.out.println(sb2.toString());
        int carry = 0;
        for(int i = 0; i < sb2.length(); i++){
            int a = sb1.charAt(i) - '0';
            int b = sb2.charAt(i) - '0';
            char digit = (char)((a + b + carry) % 10 + '0');
            carry = (a + b + carry) / 10;
            ret.append(digit);
        }
        if(carry != 0){
            ret.append((char)(carry + '0'));
        }
        return ret.reverse().toString();
    }
}
